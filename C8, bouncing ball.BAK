//C8, bouncing ball 
#include<dos.h>
#include<iostream.h>
#include<graphics.h>
#include<math.h>
#include<conio.h>

int main()
{
int gd=DETECT,gm;
initgraph(&gd,&gm, "c : \\ turboc3 \\ bgi\\");

float x=1,y,j=0.5,count=0.1,i;
setcolor(01);
for(int k=0;k<7;k++)
{
 for(i=90;i<270;i+=10)
 {
y=cos(i*3.14/180)/j;
x+=5;
circle(x,y*100+200,15);
floodfill(x,y*100+200,01);
line(0,215,800,215);
delay(50);
clrscr();
 }
j+=count;
count+=0.1;
}
getch();
return 0;
}










//### Short Algorithm for Bouncing Ball Program

1. **Start the program.**  
2. **Initialize graphics mode.**  
3. **Set initial values for the ball's position and velocity.**
   - `x = 1, y = 0.5` (ball position).
   - `j = 0.5` (gravity effect).
4. **Draw the bouncing ball in a loop:**
   - Use `cos` to calculate vertical movement for the bouncing effect.
   - Update the ball's horizontal position (`x += 5`).
   - Draw the ball using `circle()` and fill it using `floodfill()`.
   - Draw a line to simulate the ground.
   - Clear the screen after each frame using `clrscr()`.
5. **Increase the gravity effect (`j`) and adjust the count (`count`) after each iteration to make the ball bounce higher.**
6. **Delay the loop to control the speed of the animation.**
7. **End the program after the loop.**
